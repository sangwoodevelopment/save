package thread;

//쓰레드중지
/*
 * 한 번 start된 쓰레드는 절대 다시 실행할 수 없다
 * => 일회용
 * 
 * [쓰레드를 종료]
 * 2. 인터럽트를 발생시키고 현재 상태를 확인한 후 작업하기
*/
class StopThread02 extends Thread {
	public void run() {
		
		while (Thread.currentThread().isInterrupted()) {
			System.out.println("현재쓰레드의 상태:실행중");
			try {
				Thread.sleep(500);
			} catch (InterruptedException e) {
			
			}
		System.out.println("현재 쓰레드의 상태:종료");
		}
	}

}

public class StopThreadTest02 {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		System.out.println("메인시작");
		StopThread02 t = new StopThread02();
		t.start();
		System.out.println("쓰레드이름:" + t.getName());
		System.out.println("인터럽트상태" + t.isInterrupted());
		try {
			Thread.sleep(3000);
		} catch (InterruptedException e) {
			e.printStackTrace();
		}
		t.interrupt();
		System.out.println("인터럽트상태:"+t.isInterrupted());
		System.out.println("인터럽트상태:"+t.isInterrupted());
		System.out.println("인터럽트상태:"+t.isInterrupted());
		System.out.println("메인종료");
	}
}
