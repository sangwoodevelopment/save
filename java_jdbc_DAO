package jdbc.step3;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
//insert,delete,update,select,login,search
public class MemberDAOImpl implements MemberDAO{
	public void insert(String id,String pass,String name,String addr,String info) {
		String sql="insert into member values(?,?,?,?,sysdate,20000,?)";
		Connection con = null;
		PreparedStatement ptmt =null;
		try {
			con = DBUtil.getConnect();
			ptmt =  con.prepareStatement(sql);
			ptmt.setString(1, id);
			ptmt.setString(2, pass);
			ptmt.setString(3, name);
			ptmt.setString(4, addr);
			ptmt.setString(5, info);
			int result = ptmt.executeUpdate();
			System.out.println(result+"개 행 삽입성공!!");
		} catch (SQLException e) {
			e.printStackTrace();
		}finally {
			DBUtil.close(null, ptmt, con);
		}
	}
	public void update(String info,String addr, String id) {
		String sql = "update member ";
		sql = sql + "set addr = ?, info = ? ";
		sql = sql + "where id = ?";
		Connection con = null;
		PreparedStatement ptmt =null;
		try {
			con = DBUtil.getConnect();
			ptmt =  con.prepareStatement(sql);
			ptmt.setString(1, addr);
			ptmt.setString(2, info);
			ptmt.setString(3, id);
			int result = ptmt.executeUpdate();
			System.out.println(result+"개 행 수정성공!!");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}finally {
			DBUtil.close(null, ptmt, con);
		}
	}
	public void delete(String id) {
		Connection con = null;
		PreparedStatement ptmt =null;
		StringBuffer sql=new StringBuffer();
		sql.append("delete member ");
		sql.append("where id=?");
		try {
			con = DBUtil.getConnect();
			ptmt =  con.prepareStatement(sql.toString());
			ptmt.setString(1,id);
			int result = ptmt.executeUpdate();
			System.out.println(result+"개 행 삭제성공!!");
		}  catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}finally {
			DBUtil.close(null, ptmt, con);
		}
	}
	public ArrayList<MemberDTO> select() {
		Connection con = null;
		PreparedStatement ptmt =null;
		ResultSet rs = null;
		String sql = "select * from member";
		ArrayList<MemberDTO> userlist = new ArrayList<>();
		MemberDTO user = null;
		try {
			con = DBUtil.getConnect();
			ptmt =  con.prepareStatement(sql);
			rs =  ptmt.executeQuery();
			System.out.println(rs);
			while(rs.next()) {
				System.out.print(rs.getString("id")+"\t");
				System.out.print(rs.getString("pass")+"\t");
				System.out.print(rs.getString("name")+"\t");
				System.out.print(rs.getString(4)+"\t");
				System.out.print(rs.getDate(5)+"\t");
				System.out.print(rs.getInt("point")+"\t");
				System.out.println(rs.getString(7));
			}
		}  catch (SQLException e) {
			e.printStackTrace();
		}finally {
			DBUtil.close(rs, ptmt, con);
		}
		return userlist;
	}
	public MemberDTO login(String id,String pass) {
		Connection con = null;
		PreparedStatement ptmt =null;
		ResultSet rs = null;
		MemberDTO loginUser = null;
		String sql = "select * from member where id=? and pass=?";
		try {
			con = DBUtil.getConnect();
			ptmt =  con.prepareStatement(sql);
			ptmt.setString(1, id);
			ptmt.setString(2, pass);
			rs =  ptmt.executeQuery();
			System.out.println(rs);
			if(rs.next()) {
				loginUser = new MemberDTO(rs.getString("id"),rs.getString("pass"),
						rs.getString("name"),rs.getString(4),rs.getDate(5),
						rs.getInt("point"),rs.getString(7));
				System.out.println(rs.getString("name")+"님 로그인 성공");
			}
		}  catch (SQLException e) {
			e.printStackTrace();
		}finally {
			DBUtil.close(rs, ptmt, con);
		}
		return loginUser;
	}
	public List<MemberDTO> search(String column,String value) {
		String sql = "";
		Connection con = null;
		PreparedStatement ptmt =null;
		ResultSet rs = null;
		List<MemberDTO> searchList = new ArrayList<>();
		MemberDTO user = null;
		if(column.equals("addr")) {
			sql = "select * from member where addr like ?";
		}else if(column.equals("name")) {
			sql = "select * from member where name like ?";
		}
		try {
			con = DBUtil.getConnect();
			ptmt =  con.prepareStatement(sql);
			ptmt.setString(1, "%"+value+"%");
			rs = ptmt.executeQuery();
			while(rs.next()) {
				user = new MemberDTO(rs.getString(1), rs.getString(2), rs.getString(3), rs.getString(4),rs.getDate(5),rs.getInt(6),rs.getString(7));
			}
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}finally {
			DBUtil.close(rs, ptmt, con);
		}
		return searchList;
	}
	@Override
	public int insert(MemberDTO user) {
		// TODO Auto-generated method stub
		return 0;
	}
	@Override
	public void update(MemberDTO updateUser) {
		// TODO Auto-generated method stub
		
	}
}
package jdbc.step3;

import java.util.Scanner;
public class DAOTest {
	public static void main(String[] args) {
		Scanner key = new Scanner(System.in);
		System.out.println("******인사관리시스템********");
		System.out.println("1. 사원등록");
		System.out.println("2. 전체사원조회");
		System.out.println("3. 사원수정");
		System.out.println("4. 사원퇴사");
		System.out.println("5. 주소로 사원 검색");
		System.out.println("6. 로그인");
		System.out.print("원하는 작업을 선택하세요:");
		int choice  = key.nextInt();
		show(choice);
	}
	public static void show(int choice){
		MenuUI ui = new MenuUI();
		switch(choice){
			case 1:
				ui.insertMenu();
				break;
			case 2:
				ui.selectMenu();
				break;
			case 3:
				ui.updateMenu();
				break;
			case 4:
				ui.deleteMenu();
				break;
			case 5:
				ui.findByAddrMenu();
				break;
			case 6:
				ui.loginMenu();
				break;
				
			case 7:
				ui.myPageMenu();
				break;
		}
	}
}


package jdbc.step3;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;

public class EmpDAOImpl implements EmpDAO{
	public void select() {
		Connection con = null;
		PreparedStatement ptmt = null;
		ResultSet rs = null;
		String sql = "select * from emp";
		ArrayList<MemberDTO> userList = new ArrayList<>();
		MemberDTO user = null;
		try {
		con = DBUtil.getConnect();
		ptmt = con.prepareStatement(sql);
		rs = ptmt.executeQuery();
		while(rs.next()) {
			//레코드의 한 컬럼들을 이용해서 MemberDTO객체를 생성
			user = new MemberDTO(rs.getString("id"), rs.getString("pass"), rs.getString("name"), rs.getString(4), sql);
			
		
			System.out.println("ArrayList저장된 레코드 갯수:");
			
			System.out.println(rs.getString("id")+"\t");
			System.out.println(rs.getString("pass")+"\t");
			System.out.println(rs.getString("name")+"\t");
			System.out.println(rs.getString(4)+"\t");
			System.out.println(rs.getDate(5)+"\t");
			System.out.println(rs.getInt("point")+"\t");
			System.out.println(rs.getInt(7)+"\t");
		}
	}catch(SQLException e) {
		e.printStackTrace();
	}finally {
		DBUtil.close(rs, ptmt, con);
	}
}
}












